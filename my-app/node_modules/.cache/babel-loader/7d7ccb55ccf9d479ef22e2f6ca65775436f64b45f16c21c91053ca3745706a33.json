{"ast":null,"code":"var _jsxFileName = \"W:\\\\Medic-React\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport DoctorDashboard from \"./components/DoctorDashboard\";\nimport PatientDashboard from \"./components/PatientDashboard\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\n// Protected Route Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole,\n  userRole,\n  isAuthenticated\n}) => {\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  if (requiredRole && userRole !== requiredRole) {\n    // Redirect to appropriate dashboard based on user's actual role\n    switch (userRole) {\n      case \"ADMIN\":\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/admin/dashboard\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 16\n        }, this);\n      case \"DOCTOR\":\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/doctor/dashboard\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 16\n        }, this);\n      case \"PATIENT\":\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/patient/dashboard\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 16\n        }, this);\n    }\n  }\n  return children;\n};\n_c = ProtectedRoute;\nfunction App() {\n  _s();\n  const [auth, setAuth] = useState({\n    isAuthenticated: false,\n    role: null,\n    username: \"\"\n  });\n\n  // Check for existing authentication on app load\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    const userSession = localStorage.getItem('userSession');\n    if (token && userSession) {\n      try {\n        const user = JSON.parse(userSession);\n        setAuth({\n          isAuthenticated: true,\n          role: user.role,\n          username: user.username\n        });\n      } catch (error) {\n        // Clear invalid session data\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('userSession');\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: auth.isAuthenticated ?\n        /*#__PURE__*/\n        // Redirect authenticated users to their dashboard\n        _jsxDEV(Navigate, {\n          to: `/${auth.role.toLowerCase()}/dashboard`,\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          setAuth: setAuth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          requiredRole: \"ADMIN\",\n          userRole: auth.role,\n          isAuthenticated: auth.isAuthenticated,\n          children: /*#__PURE__*/_jsxDEV(AdminDashboard, {\n            auth: auth,\n            setAuth: setAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/doctor/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          requiredRole: \"DOCTOR\",\n          userRole: auth.role,\n          isAuthenticated: auth.isAuthenticated,\n          children: /*#__PURE__*/_jsxDEV(DoctorDashboard, {\n            auth: auth,\n            setAuth: setAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/patient/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          requiredRole: \"PATIENT\",\n          userRole: auth.role,\n          isAuthenticated: auth.isAuthenticated,\n          children: /*#__PURE__*/_jsxDEV(PatientDashboard, {\n            auth: auth,\n            setAuth: setAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aOp6VFPM8WtibCJ3wihpAanPQIc=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Login","AdminDashboard","DoctorDashboard","PatientDashboard","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","userRole","isAuthenticated","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","auth","setAuth","role","username","token","localStorage","getItem","userSession","user","JSON","parse","error","removeItem","path","element","toLowerCase","_c2","$RefreshReg$"],"sources":["W:/Medic-React/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport DoctorDashboard from \"./components/DoctorDashboard\";\nimport PatientDashboard from \"./components/PatientDashboard\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\n// Protected Route Component\nconst ProtectedRoute = ({ children, requiredRole, userRole, isAuthenticated }) => {\n  if (!isAuthenticated) {\n    return <Navigate to=\"/\" replace />;\n  }\n  \n  if (requiredRole && userRole !== requiredRole) {\n    // Redirect to appropriate dashboard based on user's actual role\n    switch (userRole) {\n      case \"ADMIN\":\n        return <Navigate to=\"/admin/dashboard\" replace />;\n      case \"DOCTOR\":\n        return <Navigate to=\"/doctor/dashboard\" replace />;\n      case \"PATIENT\":\n        return <Navigate to=\"/patient/dashboard\" replace />;\n      default:\n        return <Navigate to=\"/\" replace />;\n    }\n  }\n  \n  return children;\n};\n\nfunction App() {\n  const [auth, setAuth] = useState({\n    isAuthenticated: false,\n    role: null,\n    username: \"\",\n  });\n\n  // Check for existing authentication on app load\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    const userSession = localStorage.getItem('userSession');\n    \n    if (token && userSession) {\n      try {\n        const user = JSON.parse(userSession);\n        setAuth({\n          isAuthenticated: true,\n          role: user.role,\n          username: user.username,\n        });\n      } catch (error) {\n        // Clear invalid session data\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('userSession');\n      }\n    }\n  }, []);\n\n  return (\n    <Router>\n      <Routes>\n        {/* Login Route */}\n        <Route \n          path=\"/\" \n          element={\n            auth.isAuthenticated ? (\n              // Redirect authenticated users to their dashboard\n              <Navigate \n                to={`/${auth.role.toLowerCase()}/dashboard`} \n                replace \n              />\n            ) : (\n              <Login setAuth={setAuth} />\n            )\n          } \n        />\n        \n        {/* Admin Dashboard Route */}\n        <Route \n          path=\"/admin/dashboard\" \n          element={\n            <ProtectedRoute \n              requiredRole=\"ADMIN\" \n              userRole={auth.role} \n              isAuthenticated={auth.isAuthenticated}\n            >\n              <AdminDashboard auth={auth} setAuth={setAuth} />\n            </ProtectedRoute>\n          } \n        />\n        \n        {/* Doctor Dashboard Route */}\n        <Route \n          path=\"/doctor/dashboard\" \n          element={\n            <ProtectedRoute \n              requiredRole=\"DOCTOR\" \n              userRole={auth.role} \n              isAuthenticated={auth.isAuthenticated}\n            >\n              <DoctorDashboard auth={auth} setAuth={setAuth} />\n            </ProtectedRoute>\n          } \n        />\n        \n        {/* Patient Dashboard Route */}\n        <Route \n          path=\"/patient/dashboard\" \n          element={\n            <ProtectedRoute \n              requiredRole=\"PATIENT\" \n              userRole={auth.role} \n              isAuthenticated={auth.isAuthenticated}\n            >\n              <PatientDashboard auth={auth} setAuth={setAuth} />\n            </ProtectedRoute>\n          } \n        />\n        \n        {/* Catch all route - redirect to login */}\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}