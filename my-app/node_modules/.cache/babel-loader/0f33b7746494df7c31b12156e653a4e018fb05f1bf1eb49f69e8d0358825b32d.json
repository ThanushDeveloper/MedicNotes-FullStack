{"ast":null,"code":"var _jsxFileName = \"W:\\\\Medic-React\\\\my-app\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/Login.css\";\nimport Logo from \"../assets/logo light.jpg\";\nimport LoginBackground from \"../assets/medicnotes-hero.webp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  setAuth\n}) {\n  _s();\n  const [showCard2, setShowCard2] = useState(false);\n  const [role, setRole] = useState(\"patient\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleLoginClick = () => {\n    setShowCard2(true);\n    setErrorMessage(\"\");\n  };\n  const handleNextClick = async () => {\n    let url = \"\";\n    let body = {};\n    if (role === \"admin\") {\n      url = \"http://localhost:8080/auth/admin/login\";\n      body = {\n        adminId: username,\n        password: password\n      };\n    } else if (role === \"doctor\") {\n      url = \"http://localhost:8080/auth/doctor/login\";\n      body = {\n        email: username,\n        password: password\n      };\n    } else if (role === \"patient\") {\n      url = \"http://localhost:8080/auth/patient/login\";\n      body = {\n        phone: username,\n        password: password\n      };\n    }\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error(\"Server responded with error:\", errorData);\n        const message = errorData.message || \"Server error. Please try again later.\";\n        throw new Error(message);\n      }\n      const data = await response.json();\n      localStorage.setItem(\"token\", data.token);\n      localStorage.setItem(\"role\", role);\n      console.log(\"Login successful. Token:\", data.token);\n      console.log(\"Role set as:\", role);\n      setAuth({\n        isAuthenticated: true,\n        role: role.toUpperCase(),\n        // Convert to \"ADMIN\", \"DOCTOR\", \"PATIENT\"\n        username: data.name || username // Use backend name or input if not returned\n      });\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      setErrorMessage(error.message);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // <div className=\"Login-Cards\">\n    //   <div\n    //     className={`card-transition ${showCard2 ? \"card-hide\" : \"card-show\"}`}\n    //   >\n    //     <div className=\"Login-card-1\">\n    //       <img src={Logo} alt=\"\" />\n    //       <h2>Login to Medical Notes</h2>\n    //       <p>Access Your Account securely.</p>\n    //       <button className=\"btn btn-primary\" onClick={handleLoginClick}>\n    //         Login\n    //       </button>\n    //     </div>\n    //   </div>\n    //   <div\n    //     className={`card-transition ${showCard2 ? \"card-show\" : \"card-hide\"}`}\n    //   >\n    //     <div className=\"login-container Login-card-2\">\n    //       <img src={Logo} alt=\"\" className=\"logo\" />\n    //       <h2>Sign in to MedicNotes</h2>\n    //       <p className=\"subtitle\">Access your Account securely</p>\n    //       <label htmlFor=\"role\">I am a</label>\n    //       <select\n    //         id=\"role\"\n    //         value={role}\n    //         onChange={(e) => setRole(e.target.value)}\n    //       >\n    //         <option value=\"patient\">Patient</option>\n    //         <option value=\"doctor\">Doctor</option>\n    //         <option value=\"admin\">Admin</option>\n    //       </select>\n    //       <label htmlFor=\"email\">Username / Email / ID</label>\n    //       <input\n    //         type=\"text\"\n    //         id=\"email\"\n    //         value={username}\n    //         onChange={(e) => setUsername(e.target.value)}\n    //         placeholder=\"e.g., dr.john@example.com\"\n    //       />\n    //       <label htmlFor=\"password\">Password</label>\n    //       <input\n    //         type=\"password\"\n    //         id=\"password\"\n    //         value={password}\n    //         onChange={(e) => setPassword(e.target.value)}\n    //         placeholder=\"password\"\n    //       />\n    //       {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n    //       <button className=\"btn\" onClick={handleNextClick}>\n    //         Next\n    //       </button>\n    //     </div>\n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      class: \"MainPage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"shade\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"navbar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"logo\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"MedicNotes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"contact-btn\",\n              children: \"Contact Us\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          class: \"hero\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"hero-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"MedicNotes:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 15\n              }, this), \"Empowering Doctors\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Streamline your workflow with intuitive, AI-powered medical documentation.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"discover-btn\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"hero-bg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Login, \"oV9qvt7QFEvWzJFtX8F3frgDjrg=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Logo","LoginBackground","jsxDEV","_jsxDEV","Login","setAuth","_s","showCard2","setShowCard2","role","setRole","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleLoginClick","handleNextClick","url","body","adminId","email","phone","response","fetch","method","headers","JSON","stringify","ok","errorData","json","console","error","message","Error","data","localStorage","setItem","token","log","isAuthenticated","toUpperCase","name","class","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["W:/Medic-React/my-app/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/Login.css\";\r\nimport Logo from \"../assets/logo light.jpg\";\r\nimport LoginBackground from \"../assets/medicnotes-hero.webp\";\r\n\r\nfunction Login({ setAuth }) {\r\n  const [showCard2, setShowCard2] = useState(false);\r\n  const [role, setRole] = useState(\"patient\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleLoginClick = () => {\r\n    setShowCard2(true);\r\n    setErrorMessage(\"\");\r\n  };\r\n\r\n  const handleNextClick = async () => {\r\n    let url = \"\";\r\n    let body = {};\r\n\r\n    if (role === \"admin\") {\r\n      url = \"http://localhost:8080/auth/admin/login\";\r\n      body = {\r\n        adminId: username,\r\n        password: password,\r\n      };\r\n    } else if (role === \"doctor\") {\r\n      url = \"http://localhost:8080/auth/doctor/login\";\r\n      body = {\r\n        email: username,\r\n        password: password,\r\n      };\r\n    } else if (role === \"patient\") {\r\n      url = \"http://localhost:8080/auth/patient/login\";\r\n      body = {\r\n        phone: username,\r\n        password: password,\r\n      };\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        console.error(\"Server responded with error:\", errorData);\r\n        const message =\r\n          errorData.message || \"Server error. Please try again later.\";\r\n        throw new Error(message);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      localStorage.setItem(\"token\", data.token);\r\n      localStorage.setItem(\"role\", role);\r\n\r\n      console.log(\"Login successful. Token:\", data.token);\r\n      console.log(\"Role set as:\", role);\r\n\r\n      setAuth({\r\n        isAuthenticated: true,\r\n        role: role.toUpperCase(), // Convert to \"ADMIN\", \"DOCTOR\", \"PATIENT\"\r\n        username: data.name || username, // Use backend name or input if not returned\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    // <div className=\"Login-Cards\">\r\n    //   <div\r\n    //     className={`card-transition ${showCard2 ? \"card-hide\" : \"card-show\"}`}\r\n    //   >\r\n    //     <div className=\"Login-card-1\">\r\n    //       <img src={Logo} alt=\"\" />\r\n    //       <h2>Login to Medical Notes</h2>\r\n    //       <p>Access Your Account securely.</p>\r\n    //       <button className=\"btn btn-primary\" onClick={handleLoginClick}>\r\n    //         Login\r\n    //       </button>\r\n    //     </div>\r\n    //   </div>\r\n\r\n    //   <div\r\n    //     className={`card-transition ${showCard2 ? \"card-show\" : \"card-hide\"}`}\r\n    //   >\r\n    //     <div className=\"login-container Login-card-2\">\r\n    //       <img src={Logo} alt=\"\" className=\"logo\" />\r\n    //       <h2>Sign in to MedicNotes</h2>\r\n    //       <p className=\"subtitle\">Access your Account securely</p>\r\n\r\n    //       <label htmlFor=\"role\">I am a</label>\r\n    //       <select\r\n    //         id=\"role\"\r\n    //         value={role}\r\n    //         onChange={(e) => setRole(e.target.value)}\r\n    //       >\r\n    //         <option value=\"patient\">Patient</option>\r\n    //         <option value=\"doctor\">Doctor</option>\r\n    //         <option value=\"admin\">Admin</option>\r\n    //       </select>\r\n\r\n    //       <label htmlFor=\"email\">Username / Email / ID</label>\r\n    //       <input\r\n    //         type=\"text\"\r\n    //         id=\"email\"\r\n    //         value={username}\r\n    //         onChange={(e) => setUsername(e.target.value)}\r\n    //         placeholder=\"e.g., dr.john@example.com\"\r\n    //       />\r\n\r\n    //       <label htmlFor=\"password\">Password</label>\r\n    //       <input\r\n    //         type=\"password\"\r\n    //         id=\"password\"\r\n    //         value={password}\r\n    //         onChange={(e) => setPassword(e.target.value)}\r\n    //         placeholder=\"password\"\r\n    //       />\r\n\r\n    //       {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n\r\n    //       <button className=\"btn\" onClick={handleNextClick}>\r\n    //         Next\r\n    //       </button>\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n\r\n    <div class=\"MainPage\">\r\n      <div class=\"shade\">\r\n        <header>\r\n          <div class=\"navbar\">\r\n            <div class=\"logo\">\r\n              <span>MedicNotes</span>\r\n            </div>\r\n            <button class=\"contact-btn\">Contact Us</button>\r\n          </div>\r\n        </header>\r\n\r\n        <section class=\"hero\">\r\n          <div class=\"hero-content\">\r\n            <h1>\r\n              MedicNotes:\r\n              <br />\r\n              Empowering Doctors\r\n            </h1>\r\n            <p>\r\n              Streamline your workflow with intuitive, AI-powered medical\r\n              documentation.\r\n            </p>\r\n            <button class=\"discover-btn\">Login</button>\r\n          </div>\r\n          <div class=\"hero-bg\"></div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}