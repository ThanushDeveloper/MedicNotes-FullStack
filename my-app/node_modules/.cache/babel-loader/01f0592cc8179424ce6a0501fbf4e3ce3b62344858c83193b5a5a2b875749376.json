{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import'../styles/Login.css';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(_ref){let{setAuth}=_ref;const navigate=useNavigate();// State management\nconst[isDark,setIsDark]=useState(false);const[formData,setFormData]=useState({role:'',username:'',password:'',rememberMe:false});const[showPassword,setShowPassword]=useState(false);const[errorMessage,setErrorMessage]=useState('');const[successMessage,setSuccessMessage]=useState('');const[isLoading,setIsLoading]=useState(false);const[isGoogleLoading,setIsGoogleLoading]=useState(false);const[showLoadingOverlay,setShowLoadingOverlay]=useState(false);// Theme management\nuseEffect(()=>{const savedTheme=localStorage.getItem('theme')||'light';const isDarkMode=savedTheme==='dark';setIsDark(isDarkMode);document.documentElement.classList.toggle('dark',isDarkMode);},[]);const toggleTheme=()=>{const newTheme=isDark?'light':'dark';setIsDark(!isDark);localStorage.setItem('theme',newTheme);document.documentElement.classList.toggle('dark',!isDark);};// Form handlers\nconst handleInputChange=e=>{const{name,value,type,checked}=e.target;setFormData(prev=>({...prev,[name]:type==='checkbox'?checked:value}));// Clear error messages when user starts typing\nif(errorMessage){setErrorMessage('');}};const togglePasswordVisibility=()=>{setShowPassword(!showPassword);};// Message handlers\nconst showError=message=>{setErrorMessage(message);setSuccessMessage('');setTimeout(()=>{setErrorMessage('');},5000);};const showSuccess=message=>{setSuccessMessage(message);setErrorMessage('');};const hideMessages=()=>{setErrorMessage('');setSuccessMessage('');};// Mock authentication function\nconst authenticateUser=async credentials=>{let url='';let payload={};switch(credentials.role){case'admin':url='http://localhost:8080/auth/admin/login';break;case'doctor':url='http://localhost:8080/auth/doctor/login';break;case'patient':url='http://localhost:8080/auth/patient/login';break;default:throw new Error('Invalid role selected');}// Determine the login identifier\nif(!credentials.username||!credentials.password){throw new Error('Missing username or password');}if(/^\\d+$/.test(credentials.username)){// Only digits: Treat as phone number\npayload={phone:credentials.username,password:credentials.password};}else if(credentials.username.includes('@')){// Contains @: Treat as email\npayload={email:credentials.username,password:credentials.password};}else{// Else: Treat as role-based ID (adminId, doctorId)\nconst idField=credentials.role==='admin'?'adminId':credentials.role==='doctor'?'doctorId':'patientId';payload={[idField]:credentials.username,password:credentials.password};}// Send POST request\nconst response=await axios.post(url,payload);// Return the actual user data from backend response\nconst userData=response.data.user||response.data;return{success:true,user:{id:response.data.id||userData.id||Date.now(),username:credentials.username,role:credentials.role.toUpperCase(),name:userData.name||userData.fullName||`${credentials.role.charAt(0).toUpperCase()+credentials.role.slice(1)} User`,email:userData.email||credentials.username,phone:userData.phone,address:userData.address,dob:userData.dob,gender:userData.gender,image:userData.image,department:userData.department,status:userData.status||'ACTIVE',token:response.data.token||userData.token}};};// Google OAuth Mock Function\nconst authenticateWithGoogle=role=>{return new Promise((resolve,reject)=>{setTimeout(()=>{if(Math.random()<0.9){// 90% success rate\nresolve({success:true,user:{id:Date.now(),username:'google.user@gmail.com',role:role.toUpperCase(),name:'Google User',provider:'google'}});}else{reject(new Error('Google authentication failed. Please try again.'));}},1500);});};// Form submission\nconst handleSubmit=async e=>{e.preventDefault();hideMessages();// Basic validation\nif(!formData.role){showError('Please select your role');return;}if(!formData.username||!formData.password){showError('Please fill in all required fields');return;}try{setIsLoading(true);const result=await authenticateUser(formData);if(result.success){showSuccess('Login successful! Redirecting to dashboard...');// Store user session\nlocalStorage.setItem('authToken',result.user.token);localStorage.setItem('userSession',JSON.stringify(result.user));// Store the ID separately for easy access\nlocalStorage.setItem('userId',result.user.id);// Show loading overlay\nsetShowLoadingOverlay(true);// Update auth state and redirect\nsetTimeout(()=>{setAuth({isAuthenticated:true,role:result.user.role,username:result.user.username,user:result.user});// Navigate to appropriate dashboard based on role\nconst dashboardRoute=`/${result.user.role.toLowerCase()}/dashboard`;navigate(dashboardRoute);setShowLoadingOverlay(false);},2000);}}catch(error){showError(error.message);}finally{setIsLoading(false);}};// Google login\nconst handleGoogleLogin=async()=>{hideMessages();if(!formData.role){showError('Please select your role before signing in with Google');return;}try{setIsGoogleLoading(true);const result=await authenticateWithGoogle(formData.role);if(result.success){showSuccess('Google login successful! Redirecting to dashboard...');// Store user session\nlocalStorage.setItem('userSession',JSON.stringify(result.user));// Store the ID separately for easy access\nlocalStorage.setItem('userId',result.user.id);// Show loading overlay\nsetShowLoadingOverlay(true);// Update auth state and redirect\nsetTimeout(()=>{setAuth({isAuthenticated:true,role:result.user.role,username:result.user.username,user:result.user});// Navigate to appropriate dashboard based on role\nconst dashboardRoute=`/${result.user.role.toLowerCase()}/dashboard`;navigate(dashboardRoute);setShowLoadingOverlay(false);},2000);}}catch(error){showError(error.message);}finally{setIsGoogleLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"theme-toggle\",onClick:toggleTheme,style:{position:'absolute'},children:/*#__PURE__*/_jsx(\"i\",{className:`fas ${isDark?'fa-sun':'fa-moon'} theme-icon`})}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo-container\",style:{padding:'0'},children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-stethoscope logo-icon\",style:{paddingTop:'10px',width:'fit-content',paddingLeft:'10px',paddingRight:'10px'}})}),/*#__PURE__*/_jsx(\"h2\",{className:\"login-title\",children:\"Welcome to MedicNotes\"}),/*#__PURE__*/_jsx(\"p\",{className:\"login-subtitle\",children:\"Sign in to your account to continue\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-container\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"login-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"role\",className:\"form-label\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user-tag label-icon\"}),\"Select Role\"]}),/*#__PURE__*/_jsxs(\"select\",{id:\"role\",name:\"role\",value:formData.role,onChange:handleInputChange,className:\"form-control\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Choose your role\"}),/*#__PURE__*/_jsx(\"option\",{value:\"patient\",children:\"Patient\"}),/*#__PURE__*/_jsx(\"option\",{value:\"doctor\",children:\"Doctor\"}),/*#__PURE__*/_jsx(\"option\",{value:\"admin\",children:\"Administrator\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"username\",className:\"form-label\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user label-icon\"}),\"Phone or Email\"]}),/*#__PURE__*/_jsx(\"input\",{id:\"username\",name:\"username\",type:\"text\",value:formData.username,onChange:handleInputChange,className:\"form-control\",placeholder:\"Enter your username or email\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"password\",className:\"form-label\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-lock label-icon\"}),\"Password\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-container\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"password\",name:\"password\",type:showPassword?'text':'password',value:formData.password,onChange:handleInputChange,className:\"form-control password-input\",placeholder:\"Enter your password\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"password-toggle\",onClick:togglePasswordVisibility,children:/*#__PURE__*/_jsx(\"i\",{className:`fas ${showPassword?'fa-eye-slash':'fa-eye'}`})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"checkbox-group\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#\",className:\"forgot-link\",children:\"Forgot password?\"})]}),errorMessage&&/*#__PURE__*/_jsxs(\"div\",{className:\"message error-message show\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-exclamation-circle message-icon\"}),/*#__PURE__*/_jsx(\"span\",{children:errorMessage})]}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:isLoading,children:[/*#__PURE__*/_jsx(\"span\",{children:\"Sign In\"}),/*#__PURE__*/_jsx(\"i\",{className:`fas fa-spinner spinner ${isLoading?'':'hidden'}`})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"login-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\xA9 2024 HealthCare. All rights reserved.\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:`loading-overlay ${showLoadingOverlay?'show':''}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-spinner\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"loading-title\",children:\"Signing you in...\"}),/*#__PURE__*/_jsx(\"p\",{className:\"loading-text\",children:\"Please wait while we verify your credentials\"})]})})]});}export default Login;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","Login","_ref","setAuth","navigate","isDark","setIsDark","formData","setFormData","role","username","password","rememberMe","showPassword","setShowPassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isLoading","setIsLoading","isGoogleLoading","setIsGoogleLoading","showLoadingOverlay","setShowLoadingOverlay","savedTheme","localStorage","getItem","isDarkMode","document","documentElement","classList","toggle","toggleTheme","newTheme","setItem","handleInputChange","e","name","value","type","checked","target","prev","togglePasswordVisibility","showError","message","setTimeout","showSuccess","hideMessages","authenticateUser","credentials","url","payload","Error","test","phone","includes","email","idField","response","post","userData","data","user","success","id","Date","now","toUpperCase","fullName","charAt","slice","address","dob","gender","image","department","status","token","authenticateWithGoogle","Promise","resolve","reject","Math","random","provider","handleSubmit","preventDefault","result","JSON","stringify","isAuthenticated","dashboardRoute","toLowerCase","error","handleGoogleLogin","className","children","onClick","style","position","padding","paddingTop","width","paddingLeft","paddingRight","onSubmit","htmlFor","onChange","required","placeholder","href","disabled"],"sources":["/workspace/my-app/src/components/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Login.css';\nimport axios from 'axios';\nfunction Login({ setAuth }) {\n  const navigate = useNavigate();\n  \n  // State management\n  const [isDark, setIsDark] = useState(false);\n  const [formData, setFormData] = useState({\n    role: '',\n    username: '',\n    password: '',\n    rememberMe: false\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGoogleLoading, setIsGoogleLoading] = useState(false);\n  const [showLoadingOverlay, setShowLoadingOverlay] = useState(false);\n\n  // Theme management\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme') || 'light';\n    const isDarkMode = savedTheme === 'dark';\n    setIsDark(isDarkMode);\n    document.documentElement.classList.toggle('dark', isDarkMode);\n  }, []);\n\n  const toggleTheme = () => {\n    const newTheme = isDark ? 'light' : 'dark';\n    setIsDark(!isDark);\n    localStorage.setItem('theme', newTheme);\n    document.documentElement.classList.toggle('dark', !isDark);\n  };\n\n  // Form handlers\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n    \n    // Clear error messages when user starts typing\n    if (errorMessage) {\n      setErrorMessage('');\n    }\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  // Message handlers\n  const showError = (message) => {\n    setErrorMessage(message);\n    setSuccessMessage('');\n    setTimeout(() => {\n      setErrorMessage('');\n    }, 5000);\n  };\n\n  const showSuccess = (message) => {\n    setSuccessMessage(message);\n    setErrorMessage('');\n  };\n\n  const hideMessages = () => {\n    setErrorMessage('');\n    setSuccessMessage('');\n  };\n\n  // Mock authentication function\n const authenticateUser = async (credentials) => {\n  let url = '';\n  let payload = {};\n  \n  switch (credentials.role) {\n    case 'admin':\n      url = 'http://localhost:8080/auth/admin/login';\n      break;\n    case 'doctor':\n      url = 'http://localhost:8080/auth/doctor/login';\n      break;\n    case 'patient':\n      url = 'http://localhost:8080/auth/patient/login';\n      break;\n    default:\n      throw new Error('Invalid role selected');\n  }\n\n  // Determine the login identifier\n  if (!credentials.username || !credentials.password) {\n    throw new Error('Missing username or password');\n  }\n\n  if (/^\\d+$/.test(credentials.username)) {\n    // Only digits: Treat as phone number\n    payload = { phone: credentials.username, password: credentials.password };\n  } else if (credentials.username.includes('@')) {\n    // Contains @: Treat as email\n    payload = { email: credentials.username, password: credentials.password };\n  } else {\n    // Else: Treat as role-based ID (adminId, doctorId)\n    const idField = credentials.role === 'admin' ? 'adminId' : credentials.role === 'doctor' ? 'doctorId' : 'patientId';\n    payload = { [idField]: credentials.username, password: credentials.password };\n  }\n\n\n\n\n\n  // Send POST request\n  const response = await axios.post(url, payload);\n\n  // Return the actual user data from backend response\n  const userData = response.data.user || response.data;\n\n\n  return {\n    success: true,\n    user: {\n      id: response.data.id || userData.id || Date.now(),\n      username: credentials.username,\n      role: credentials.role.toUpperCase(),\n      name: userData.name || userData.fullName || `${credentials.role.charAt(0).toUpperCase() + credentials.role.slice(1)} User`,\n      email: userData.email || credentials.username,\n      phone: userData.phone,\n      address: userData.address,\n      dob: userData.dob,\n      gender: userData.gender,\n      image: userData.image,\n      department: userData.department,\n      status: userData.status || 'ACTIVE',\n      token: response.data.token || userData.token\n    }\n  };\n};\n\n\n  // Google OAuth Mock Function\n  const authenticateWithGoogle = (role) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (Math.random() < 0.9) { // 90% success rate\n          resolve({\n            success: true,\n            user: {\n              id: Date.now(),\n              username: 'google.user@gmail.com',\n              role: role.toUpperCase(),\n              name: 'Google User',\n              provider: 'google'\n            }\n          });\n        } else {\n          reject(new Error('Google authentication failed. Please try again.'));\n        }\n      }, 1500);\n    });\n  };\n\n  // Form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    hideMessages();\n\n    // Basic validation\n    if (!formData.role) {\n      showError('Please select your role');\n      return;\n    }\n\n    if (!formData.username || !formData.password) {\n      showError('Please fill in all required fields');\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      const result = await authenticateUser(formData);\n\n      if (result.success) {\n        showSuccess('Login successful! Redirecting to dashboard...');\n        \n        // Store user session\n        localStorage.setItem('authToken', result.user.token);\n        localStorage.setItem('userSession', JSON.stringify(result.user));\n        // Store the ID separately for easy access\n        localStorage.setItem('userId', result.user.id);\n        \n        // Show loading overlay\n        setShowLoadingOverlay(true);\n        \n        // Update auth state and redirect\n        setTimeout(() => {\n          setAuth({\n            isAuthenticated: true,\n            role: result.user.role,\n            username: result.user.username,\n            user: result.user\n          });\n          \n          // Navigate to appropriate dashboard based on role\n          const dashboardRoute = `/${result.user.role.toLowerCase()}/dashboard`;\n          navigate(dashboardRoute);\n          \n          setShowLoadingOverlay(false);\n        }, 2000);\n      }\n    } catch (error) {\n      showError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Google login\n  const handleGoogleLogin = async () => {\n    hideMessages();\n\n    if (!formData.role) {\n      showError('Please select your role before signing in with Google');\n      return;\n    }\n\n    try {\n      setIsGoogleLoading(true);\n      const result = await authenticateWithGoogle(formData.role);\n\n      if (result.success) {\n        showSuccess('Google login successful! Redirecting to dashboard...');\n        \n        // Store user session\n        localStorage.setItem('userSession', JSON.stringify(result.user));\n        // Store the ID separately for easy access\n        localStorage.setItem('userId', result.user.id);\n        \n        // Show loading overlay\n        setShowLoadingOverlay(true);\n        \n        // Update auth state and redirect\n        setTimeout(() => {\n          setAuth({\n            isAuthenticated: true,\n            role: result.user.role,\n            username: result.user.username,\n            user: result.user\n          });\n          \n          // Navigate to appropriate dashboard based on role\n          const dashboardRoute = `/${result.user.role.toLowerCase()}/dashboard`;\n          navigate(dashboardRoute);\n          \n          setShowLoadingOverlay(false);\n        }, 2000);\n      }\n    } catch (error) {\n      showError(error.message);\n    } finally {\n      setIsGoogleLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      {/* Theme Toggle Button */}\n      <button className=\"theme-toggle\" onClick={toggleTheme} style={{position:'absolute'}}>\n        <i className={`fas ${isDark ? 'fa-sun' : 'fa-moon'} theme-icon`}></i>\n      </button>\n\n      {/* Main Container */}\n      <div className=\"login-content\">\n        {/* Logo and Title */}\n        <div className=\"login-header\">\n          <div className=\"logo-container\" style={{padding:'0'}}>\n            <i className=\"fas fa-stethoscope logo-icon\" style={{paddingTop:'10px',width:'fit-content',paddingLeft:'10px',paddingRight:'10px'}}></i>\n          </div>\n          <h2 className=\"login-title\">Welcome to MedicNotes</h2>\n          <p className=\"login-subtitle\">Sign in to your account to continue</p>\n        </div>\n\n        {/* Login Form */}\n        <div className=\"form-container\">\n         \n\n          <form className=\"login-form\" onSubmit={handleSubmit}>\n            {/* Role Selection */}\n            <div className=\"form-group\">\n              <label htmlFor=\"role\" className=\"form-label\">\n                <i className=\"fas fa-user-tag label-icon\"></i>\n                Select Role\n              </label>\n              <select\n                id=\"role\"\n                name=\"role\"\n                value={formData.role}\n                onChange={handleInputChange}\n                className=\"form-control\"\n                required\n              >\n                <option value=\"\">Choose your role</option>\n                <option value=\"patient\">Patient</option>\n                <option value=\"doctor\">Doctor</option>\n                <option value=\"admin\">Administrator</option>\n              </select>\n            </div>\n\n            {/* Username */}\n            <div className=\"form-group\">\n              <label htmlFor=\"username\" className=\"form-label\">\n                <i className=\"fas fa-user label-icon\"></i>\n                Phone or Email\n              </label>\n              <input\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n                value={formData.username}\n                onChange={handleInputChange}\n                className=\"form-control\"\n                placeholder=\"Enter your username or email\"\n                required\n              />\n            </div>\n\n            {/* Password */}\n            <div className=\"form-group\">\n              <label htmlFor=\"password\" className=\"form-label\">\n                <i className=\"fas fa-lock label-icon\"></i>\n                Password\n              </label>\n              <div className=\"password-container\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  className=\"form-control password-input\"\n                  placeholder=\"Enter your password\"\n                  required\n                />\n                <button\n                  type=\"button\"\n                  className=\"password-toggle\"\n                  onClick={togglePasswordVisibility}\n                >\n                  <i className={`fas ${showPassword ? 'fa-eye-slash' : 'fa-eye'}`}></i>\n                </button>\n              </div>\n            </div>\n\n            {/* Remember Me & Forgot Password */}\n            <div className=\"form-row\">\n              <div className=\"checkbox-group\">\n                {/* <input\n                  id=\"rememberMe\"\n                  name=\"rememberMe\"\n                  type=\"checkbox\"\n                  checked={formData.rememberMe}\n                  onChange={handleInputChange}\n                  className=\"checkbox\"\n                /> */}\n                {/* <label htmlFor=\"rememberMe\" className=\"checkbox-label\">\n                  Remember me\n                </label> */}\n              </div>\n              <a href=\"#\" className=\"forgot-link\">\n                Forgot password?\n              </a>\n            </div>\n\n            {/* Error Message */}\n            {errorMessage && (\n              <div className=\"message error-message show\">\n                <i className=\"fas fa-exclamation-circle message-icon\"></i>\n                <span>{errorMessage}</span>\n              </div>\n            )}\n\n{/* \n             Error Message\n          <div className={`message error-message ${errorMessage ? 'show' : ''}`}>\n            <i className=\"fas fa-exclamation-circle message-icon\"></i>\n            <span>{errorMessage}</span>\n          </div> */}\n\n          {/* Success Message */}\n          {/* <div className={`message success-message ${successMessage ? 'show' : ''}`}>\n            <i className=\"fas fa-check-circle message-icon\"></i>\n            <span>{successMessage}</span>\n          </div> */}\n\n            {/* Success Message */}\n            {/* {successMessage && (\n              <div className=\"message success-message show\">\n                <i className=\"fas fa-check-circle message-icon\"></i>\n                <span>{successMessage}</span>\n              </div>\n            )} */}\n\n\n            {/* Login Button */}\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              disabled={isLoading}\n            >\n              <span>Sign In</span>\n              <i className={`fas fa-spinner spinner ${isLoading ? '' : 'hidden'}`}></i>\n            </button>\n\n            {/* Divider */}\n            {/* <div className=\"divider\">\n              <span className=\"divider-text\">Or continue with</span>\n            </div> */}\n\n            {/* Google Login Button */}\n            {/* <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              onClick={handleGoogleLogin}\n              disabled={isGoogleLoading}\n            >\n              <svg className=\"google-icon\" viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\" />\n                <path fill=\"currentColor\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\" />\n                <path fill=\"currentColor\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\" />\n                <path fill=\"currentColor\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\" />\n              </svg>\n              <span>Sign in with Google</span>\n              <i className={`fas fa-spinner spinner ${isGoogleLoading ? '' : 'hidden'}`}></i>\n            </button> */}\n\n            {/* Demo Credentials */}\n            {/* <div className=\"demo-info\">\n              <p className=\"demo-title\">Demo Credentials:</p>\n              <div className=\"demo-credentials\">\n                <div className=\"demo-credential\">\n                  <strong>Patient:</strong> patient@test.com / patient123\n                </div>\n                <div className=\"demo-credential\">\n                  <strong>Doctor:</strong> doctor@test.com / doctor123\n                </div>\n                <div className=\"demo-credential\">\n                  <strong>Admin:</strong> admin@test.com / admin123\n                </div>\n              </div>\n            </div> */}\n          </form>\n\n          {/* Sign Up Link */}\n          {/* <div className=\"signup-section\">\n            <p>\n              Don't have an account?{' '}\n              <a href=\"#\" className=\"signup-link\">\n                Sign up here\n              </a>\n            </p>\n          </div> */}\n        </div>\n\n        {/* Footer */}\n        <div className=\"login-footer\">\n          <p>© 2024 HealthCare. All rights reserved.</p>\n        </div>\n      </div>\n\n      {/* Loading Overlay */}\n      <div className={`loading-overlay ${showLoadingOverlay ? 'show' : ''}`}>\n        <div className=\"loading-content\">\n          <div className=\"loading-spinner\">\n            <i className=\"fas fa-spinner\"></i>\n          </div>\n          <h3 className=\"loading-title\">Signing you in...</h3>\n          <p className=\"loading-text\">Please wait while we verify your credentials</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}