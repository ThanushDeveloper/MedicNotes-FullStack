{"ast":null,"code":"var _jsxFileName = \"W:\\\\Medic-React\\\\my-app\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"../styles/Login.css\";\n// import Logo from \"../assets/logo light.jpg\";\n\n// function Login() {\n//   const [showCard2, setShowCard2] = useState(false);\n\n//   const handleLoginClick = () => {\n//     setShowCard2(true);\n//   };\n\n//   return (\n//     <div className=\"Login-Cards\">\n//       <div\n//         className={`card-transition ${showCard2 ? \"card-hide\" : \"card-show\"}`}\n//       >\n//         <div className=\"Login-card-1\">\n//           <img src={Logo} alt=\"\" />\n//           <h2>Login to Medical Notes</h2>\n//           <p>Access patient data, prescriptions, and visit history securely.</p>\n//           <button className=\"btn btn-primary\" onClick={handleLoginClick}>\n//             Login\n//           </button>\n//         </div>\n//       </div>\n\n//       <div\n//         className={`card-transition ${showCard2 ? \"card-show\" : \"card-hide\"}`}\n//       >\n//         <div class=\"login-container Login-card-2\">\n//           {/* <img src=\"Assects/logo light.jpg\" alt=\"MedicNotes\" class=\"logo\" /> */}\n//           <img src={Logo} alt=\"\" class=\"logo\" />\n//           <h2>Sign in to MedicNotes</h2>\n//           <p class=\"subtitle\">Access your Account securely</p>\n//           <label for=\"role\">I am a</label>\n//           <select id=\"role\">\n//             <option value=\"patient\">Patient</option>\n//             <option value=\"doctor\">Doctor</option>\n//             <option value=\"admin\">Admin</option>\n//           </select>\n//           <label for=\"email\">Username or Email or Id</label>\n//           <input\n//             type=\"text\"\n//             id=\"email\"\n//             placeholder=\"e.g., dr.john@example.com\"\n//           />\n//           <label for=\"password\">Password</label>\n//           <input type=\"password\" id=\"password\" placeholder=\"password\" />\n//           <button class=\"btn\">Next</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\n// import React, { useState } from \"react\";\n// import \"../styles/Login.css\";\n// import Logo from \"../assets/logo light.jpg\";\n\n// function Login() {\n//   const [showCard2, setShowCard2] = useState(false);\n//   const [role, setRole] = useState(\"patient\");\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [errorMessage, setErrorMessage] = useState(\"\");\n\n//   const handleLoginClick = () => {\n//     setShowCard2(true);\n//     setErrorMessage(\"\"); // Clear any previous error\n//   };\n\n//   const handleNextClick = async () => {\n//     let url = \"\";\n//     let body = {};\n\n//     if (role === \"admin\") {\n//       url = \"http://localhost:8080/auth/admin/login\";\n//       body = {\n//         adminId: username,\n//         password: password,\n//       };\n//     } else if (role === \"doctor\") {\n//       url = \"http://localhost:8080/auth/doctor/login\";\n//       body = {\n//         email: username,\n//         password: password,\n//       };\n//     } else {\n//       url = \"http://localhost:8080/auth/patient/login\";\n//       body = {\n//         phone: username,\n//         password: password,\n//       };\n//     }\n\n//     try {\n//       const response = await fetch(url, {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(body),\n//       });\n\n//       const data = await response.json();\n\n//       if (!response.ok) {\n//         throw new Error(data.message || \"Login failed\");\n//       }\n\n//       localStorage.setItem(\"token\", data.token);\n//       localStorage.setItem(\"role\", role);\n//       window.location.href = `/${role}/dashboard`;\n//     } catch (error) {\n//       setErrorMessage(error.message);\n//     }\n//   };\n\n//   return (\n//     <div className=\"Login-Cards\">\n//       <div\n//         className={`card-transition ${showCard2 ? \"card-hide\" : \"card-show\"}`}\n//       >\n//         <div className=\"Login-card-1\">\n//           <img src={Logo} alt=\"\" />\n//           <h2>Login to Medical Notes</h2>\n//           <p>Access patient data, prescriptions, and visit history securely.</p>\n//           <button className=\"btn btn-primary\" onClick={handleLoginClick}>\n//             Login\n//           </button>\n//         </div>\n//       </div>\n\n//       <div\n//         className={`card-transition ${showCard2 ? \"card-show\" : \"card-hide\"}`}\n//       >\n//         <div className=\"login-container Login-card-2\">\n//           <img src={Logo} alt=\"\" className=\"logo\" />\n//           <h2>Sign in to MedicNotes</h2>\n//           <p className=\"subtitle\">Access your Account securely</p>\n\n//           <label htmlFor=\"role\">I am a</label>\n//           <select\n//             id=\"role\"\n//             value={role}\n//             onChange={(e) => setRole(e.target.value)}\n//           >\n//             <option value=\"patient\">Patient</option>\n//             <option value=\"doctor\">Doctor</option>\n//             <option value=\"admin\">Admin</option>\n//           </select>\n\n//           <label htmlFor=\"email\">Username or Email or Id</label>\n//           <input\n//             type=\"text\"\n//             id=\"email\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             placeholder=\"e.g., dr.john@example.com\"\n//           />\n\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             placeholder=\"password\"\n//           />\n\n//           {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n\n//           <button className=\"btn\" onClick={handleNextClick}>\n//             Next\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\nimport React, { useState } from \"react\";\nimport \"../styles/Login.css\";\nimport Logo from \"../assets/logo light.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [showCard2, setShowCard2] = useState(false);\n  const [role, setRole] = useState(\"patient\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleLoginClick = () => {\n    setShowCard2(true);\n    setErrorMessage(\"\");\n  };\n  const handleNextClick = async () => {\n    setLoading(true);\n    setErrorMessage(\"\");\n    let url = \"\";\n    let body = {};\n    if (role === \"admin\") {\n      url = \"http://localhost:8080/auth/admin/login\";\n      // Support numeric adminId or email or phone\n      body = isNaN(username) ? username.includes(\"@\") ? {\n        email: username,\n        password\n      } : {\n        phone: username,\n        password\n      } : {\n        adminId: parseInt(username),\n        password\n      };\n    } else if (role === \"doctor\") {\n      url = \"http://localhost:8080/auth/doctor/login\";\n      body = isNaN(username) ? username.includes(\"@\") ? {\n        email: username,\n        password\n      } : {\n        phone: username,\n        password\n      } : {\n        doctorId: parseInt(username),\n        password\n      };\n    } else {\n      url = \"http://localhost:8080/auth/patient/login\";\n      body = {\n        email: username,\n        password\n      };\n    }\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || \"Invalid credentials. Please try again.\");\n      }\n      if (data.token) {\n        localStorage.setItem(\"token\", data.token);\n        localStorage.setItem(\"role\", role);\n        window.location.href = `/${role}/dashboard`;\n      } else {\n        throw new Error(\"Token not received.\");\n      }\n    } catch (error) {\n      setErrorMessage(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-Cards\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card-transition ${showCard2 ? \"card-hide\" : \"card-show\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Login-card-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login to Medical Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Access patient data, prescriptions, and visit history securely.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleLoginClick,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card-transition ${showCard2 ? \"card-show\" : \"card-hide\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container Login-card-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"MedicNotes\",\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign in to MedicNotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subtitle\",\n          children: \"Access your Account securely\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"role\",\n          children: \"I am a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"role\",\n          value: role,\n          onChange: e => setRole(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"patient\",\n            children: \"Patient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"doctor\",\n            children: \"Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Username / Email / Phone / ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"e.g., dr.john@example.com or 9176543210\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 28\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-message\",\n          children: \"Logging in...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: handleNextClick,\n          disabled: loading,\n          children: loading ? \"Please wait...\" : \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"852RPehsqltDwpoYe+OLiqA4HlE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Logo","jsxDEV","_jsxDEV","Login","_s","showCard2","setShowCard2","role","setRole","username","setUsername","password","setPassword","errorMessage","setErrorMessage","loading","setLoading","handleLoginClick","handleNextClick","url","body","isNaN","includes","email","phone","adminId","parseInt","doctorId","response","fetch","method","headers","JSON","stringify","data","json","ok","Error","message","token","localStorage","setItem","window","location","href","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","value","onChange","e","target","type","placeholder","disabled","_c","$RefreshReg$"],"sources":["W:/Medic-React/my-app/src/components/Login.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"../styles/Login.css\";\r\n// import Logo from \"../assets/logo light.jpg\";\r\n\r\n// function Login() {\r\n//   const [showCard2, setShowCard2] = useState(false);\r\n\r\n//   const handleLoginClick = () => {\r\n//     setShowCard2(true);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"Login-Cards\">\r\n//       <div\r\n//         className={`card-transition ${showCard2 ? \"card-hide\" : \"card-show\"}`}\r\n//       >\r\n//         <div className=\"Login-card-1\">\r\n//           <img src={Logo} alt=\"\" />\r\n//           <h2>Login to Medical Notes</h2>\r\n//           <p>Access patient data, prescriptions, and visit history securely.</p>\r\n//           <button className=\"btn btn-primary\" onClick={handleLoginClick}>\r\n//             Login\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div\r\n//         className={`card-transition ${showCard2 ? \"card-show\" : \"card-hide\"}`}\r\n//       >\r\n//         <div class=\"login-container Login-card-2\">\r\n//           {/* <img src=\"Assects/logo light.jpg\" alt=\"MedicNotes\" class=\"logo\" /> */}\r\n//           <img src={Logo} alt=\"\" class=\"logo\" />\r\n//           <h2>Sign in to MedicNotes</h2>\r\n//           <p class=\"subtitle\">Access your Account securely</p>\r\n//           <label for=\"role\">I am a</label>\r\n//           <select id=\"role\">\r\n//             <option value=\"patient\">Patient</option>\r\n//             <option value=\"doctor\">Doctor</option>\r\n//             <option value=\"admin\">Admin</option>\r\n//           </select>\r\n//           <label for=\"email\">Username or Email or Id</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"email\"\r\n//             placeholder=\"e.g., dr.john@example.com\"\r\n//           />\r\n//           <label for=\"password\">Password</label>\r\n//           <input type=\"password\" id=\"password\" placeholder=\"password\" />\r\n//           <button class=\"btn\">Next</button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n// import React, { useState } from \"react\";\r\n// import \"../styles/Login.css\";\r\n// import Logo from \"../assets/logo light.jpg\";\r\n\r\n// function Login() {\r\n//   const [showCard2, setShowCard2] = useState(false);\r\n//   const [role, setRole] = useState(\"patient\");\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n//   const handleLoginClick = () => {\r\n//     setShowCard2(true);\r\n//     setErrorMessage(\"\"); // Clear any previous error\r\n//   };\r\n\r\n//   const handleNextClick = async () => {\r\n//     let url = \"\";\r\n//     let body = {};\r\n\r\n//     if (role === \"admin\") {\r\n//       url = \"http://localhost:8080/auth/admin/login\";\r\n//       body = {\r\n//         adminId: username,\r\n//         password: password,\r\n//       };\r\n//     } else if (role === \"doctor\") {\r\n//       url = \"http://localhost:8080/auth/doctor/login\";\r\n//       body = {\r\n//         email: username,\r\n//         password: password,\r\n//       };\r\n//     } else {\r\n//       url = \"http://localhost:8080/auth/patient/login\";\r\n//       body = {\r\n//         phone: username,\r\n//         password: password,\r\n//       };\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(url, {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(body),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(data.message || \"Login failed\");\r\n//       }\r\n\r\n//       localStorage.setItem(\"token\", data.token);\r\n//       localStorage.setItem(\"role\", role);\r\n//       window.location.href = `/${role}/dashboard`;\r\n//     } catch (error) {\r\n//       setErrorMessage(error.message);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"Login-Cards\">\r\n//       <div\r\n//         className={`card-transition ${showCard2 ? \"card-hide\" : \"card-show\"}`}\r\n//       >\r\n//         <div className=\"Login-card-1\">\r\n//           <img src={Logo} alt=\"\" />\r\n//           <h2>Login to Medical Notes</h2>\r\n//           <p>Access patient data, prescriptions, and visit history securely.</p>\r\n//           <button className=\"btn btn-primary\" onClick={handleLoginClick}>\r\n//             Login\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div\r\n//         className={`card-transition ${showCard2 ? \"card-show\" : \"card-hide\"}`}\r\n//       >\r\n//         <div className=\"login-container Login-card-2\">\r\n//           <img src={Logo} alt=\"\" className=\"logo\" />\r\n//           <h2>Sign in to MedicNotes</h2>\r\n//           <p className=\"subtitle\">Access your Account securely</p>\r\n\r\n//           <label htmlFor=\"role\">I am a</label>\r\n//           <select\r\n//             id=\"role\"\r\n//             value={role}\r\n//             onChange={(e) => setRole(e.target.value)}\r\n//           >\r\n//             <option value=\"patient\">Patient</option>\r\n//             <option value=\"doctor\">Doctor</option>\r\n//             <option value=\"admin\">Admin</option>\r\n//           </select>\r\n\r\n//           <label htmlFor=\"email\">Username or Email or Id</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"email\"\r\n//             value={username}\r\n//             onChange={(e) => setUsername(e.target.value)}\r\n//             placeholder=\"e.g., dr.john@example.com\"\r\n//           />\r\n\r\n//           <label htmlFor=\"password\">Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             id=\"password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             placeholder=\"password\"\r\n//           />\r\n\r\n//           {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n\r\n//           <button className=\"btn\" onClick={handleNextClick}>\r\n//             Next\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"../styles/Login.css\";\r\nimport Logo from \"../assets/logo light.jpg\";\r\n\r\nfunction Login() {\r\n  const [showCard2, setShowCard2] = useState(false);\r\n  const [role, setRole] = useState(\"patient\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleLoginClick = () => {\r\n    setShowCard2(true);\r\n    setErrorMessage(\"\");\r\n  };\r\n\r\n  const handleNextClick = async () => {\r\n    setLoading(true);\r\n    setErrorMessage(\"\");\r\n\r\n    let url = \"\";\r\n    let body = {};\r\n\r\n    if (role === \"admin\") {\r\n      url = \"http://localhost:8080/auth/admin/login\";\r\n      // Support numeric adminId or email or phone\r\n      body = isNaN(username)\r\n        ? username.includes(\"@\")\r\n          ? { email: username, password }\r\n          : { phone: username, password }\r\n        : { adminId: parseInt(username), password };\r\n    } else if (role === \"doctor\") {\r\n      url = \"http://localhost:8080/auth/doctor/login\";\r\n      body = isNaN(username)\r\n        ? username.includes(\"@\")\r\n          ? { email: username, password }\r\n          : { phone: username, password }\r\n        : { doctorId: parseInt(username), password };\r\n    } else {\r\n      url = \"http://localhost:8080/auth/patient/login\";\r\n      body = {\r\n        email: username,\r\n        password,\r\n      };\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\r\n          data.message || \"Invalid credentials. Please try again.\"\r\n        );\r\n      }\r\n\r\n      if (data.token) {\r\n        localStorage.setItem(\"token\", data.token);\r\n        localStorage.setItem(\"role\", role);\r\n        window.location.href = `/${role}/dashboard`;\r\n      } else {\r\n        throw new Error(\"Token not received.\");\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login-Cards\">\r\n      <div\r\n        className={`card-transition ${showCard2 ? \"card-hide\" : \"card-show\"}`}\r\n      >\r\n        <div className=\"Login-card-1\">\r\n          <img src={Logo} alt=\"\" />\r\n          <h2>Login to Medical Notes</h2>\r\n          <p>Access patient data, prescriptions, and visit history securely.</p>\r\n          <button className=\"btn btn-primary\" onClick={handleLoginClick}>\r\n            Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={`card-transition ${showCard2 ? \"card-show\" : \"card-hide\"}`}\r\n      >\r\n        <div className=\"login-container Login-card-2\">\r\n          <img src={Logo} alt=\"MedicNotes\" className=\"logo\" />\r\n          <h2>Sign in to MedicNotes</h2>\r\n          <p className=\"subtitle\">Access your Account securely</p>\r\n\r\n          <label htmlFor=\"role\">I am a</label>\r\n          <select\r\n            id=\"role\"\r\n            value={role}\r\n            onChange={(e) => setRole(e.target.value)}\r\n          >\r\n            <option value=\"patient\">Patient</option>\r\n            <option value=\"doctor\">Doctor</option>\r\n            <option value=\"admin\">Admin</option>\r\n          </select>\r\n\r\n          <label htmlFor=\"email\">Username / Email / Phone / ID</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"email\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"e.g., dr.john@example.com or 9176543210\"\r\n          />\r\n\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"Your password\"\r\n          />\r\n\r\n          {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n\r\n          {loading && <div className=\"loading-message\">Logging in...</div>}\r\n\r\n          <button className=\"btn\" onClick={handleNextClick} disabled={loading}>\r\n            {loading ? \"Please wait...\" : \"Next\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB;AAC5B,OAAOC,IAAI,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,SAAS,CAAC;EAC3C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMkB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BX,YAAY,CAAC,IAAI,CAAC;IAClBQ,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,MAAMI,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCF,UAAU,CAAC,IAAI,CAAC;IAChBF,eAAe,CAAC,EAAE,CAAC;IAEnB,IAAIK,GAAG,GAAG,EAAE;IACZ,IAAIC,IAAI,GAAG,CAAC,CAAC;IAEb,IAAIb,IAAI,KAAK,OAAO,EAAE;MACpBY,GAAG,GAAG,wCAAwC;MAC9C;MACAC,IAAI,GAAGC,KAAK,CAACZ,QAAQ,CAAC,GAClBA,QAAQ,CAACa,QAAQ,CAAC,GAAG,CAAC,GACpB;QAAEC,KAAK,EAAEd,QAAQ;QAAEE;MAAS,CAAC,GAC7B;QAAEa,KAAK,EAAEf,QAAQ;QAAEE;MAAS,CAAC,GAC/B;QAAEc,OAAO,EAAEC,QAAQ,CAACjB,QAAQ,CAAC;QAAEE;MAAS,CAAC;IAC/C,CAAC,MAAM,IAAIJ,IAAI,KAAK,QAAQ,EAAE;MAC5BY,GAAG,GAAG,yCAAyC;MAC/CC,IAAI,GAAGC,KAAK,CAACZ,QAAQ,CAAC,GAClBA,QAAQ,CAACa,QAAQ,CAAC,GAAG,CAAC,GACpB;QAAEC,KAAK,EAAEd,QAAQ;QAAEE;MAAS,CAAC,GAC7B;QAAEa,KAAK,EAAEf,QAAQ;QAAEE;MAAS,CAAC,GAC/B;QAAEgB,QAAQ,EAAED,QAAQ,CAACjB,QAAQ,CAAC;QAAEE;MAAS,CAAC;IAChD,CAAC,MAAM;MACLQ,GAAG,GAAG,0CAA0C;MAChDC,IAAI,GAAG;QACLG,KAAK,EAAEd,QAAQ;QACfE;MACF,CAAC;IACH;IAEA,IAAI;MACF,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,EAAE;QAChCW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CX,IAAI,EAAEY,IAAI,CAACC,SAAS,CAACb,IAAI;MAC3B,CAAC,CAAC;MAEF,MAAMc,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CACbH,IAAI,CAACI,OAAO,IAAI,wCAClB,CAAC;MACH;MAEA,IAAIJ,IAAI,CAACK,KAAK,EAAE;QACdC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACK,KAAK,CAAC;QACzCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAElC,IAAI,CAAC;QAClCmC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,IAAIrC,IAAI,YAAY;MAC7C,CAAC,MAAM;QACL,MAAM,IAAI8B,KAAK,CAAC,qBAAqB,CAAC;MACxC;IACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACd/B,eAAe,CAAC+B,KAAK,CAACP,OAAO,CAAC;IAChC,CAAC,SAAS;MACRtB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEd,OAAA;IAAK4C,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1B7C,OAAA;MACE4C,SAAS,EAAE,mBAAmBzC,SAAS,GAAG,WAAW,GAAG,WAAW,EAAG;MAAA0C,QAAA,eAEtE7C,OAAA;QAAK4C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B7C,OAAA;UAAK8C,GAAG,EAAEhD,IAAK;UAACiD,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzBnD,OAAA;UAAA6C,QAAA,EAAI;QAAsB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/BnD,OAAA;UAAA6C,QAAA,EAAG;QAA+D;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACtEnD,OAAA;UAAQ4C,SAAS,EAAC,iBAAiB;UAACQ,OAAO,EAAErC,gBAAiB;UAAA8B,QAAA,EAAC;QAE/D;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENnD,OAAA;MACE4C,SAAS,EAAE,mBAAmBzC,SAAS,GAAG,WAAW,GAAG,WAAW,EAAG;MAAA0C,QAAA,eAEtE7C,OAAA;QAAK4C,SAAS,EAAC,8BAA8B;QAAAC,QAAA,gBAC3C7C,OAAA;UAAK8C,GAAG,EAAEhD,IAAK;UAACiD,GAAG,EAAC,YAAY;UAACH,SAAS,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpDnD,OAAA;UAAA6C,QAAA,EAAI;QAAqB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BnD,OAAA;UAAG4C,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAA4B;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAExDnD,OAAA;UAAOqD,OAAO,EAAC,MAAM;UAAAR,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpCnD,OAAA;UACEsD,EAAE,EAAC,MAAM;UACTC,KAAK,EAAElD,IAAK;UACZmD,QAAQ,EAAGC,CAAC,IAAKnD,OAAO,CAACmD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAV,QAAA,gBAEzC7C,OAAA;YAAQuD,KAAK,EAAC,SAAS;YAAAV,QAAA,EAAC;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxCnD,OAAA;YAAQuD,KAAK,EAAC,QAAQ;YAAAV,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtCnD,OAAA;YAAQuD,KAAK,EAAC,OAAO;YAAAV,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eAETnD,OAAA;UAAOqD,OAAO,EAAC,OAAO;UAAAR,QAAA,EAAC;QAA6B;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5DnD,OAAA;UACE2D,IAAI,EAAC,MAAM;UACXL,EAAE,EAAC,OAAO;UACVC,KAAK,EAAEhD,QAAS;UAChBiD,QAAQ,EAAGC,CAAC,IAAKjD,WAAW,CAACiD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7CK,WAAW,EAAC;QAAyC;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC,eAEFnD,OAAA;UAAOqD,OAAO,EAAC,UAAU;UAAAR,QAAA,EAAC;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1CnD,OAAA;UACE2D,IAAI,EAAC,UAAU;UACfL,EAAE,EAAC,UAAU;UACbC,KAAK,EAAE9C,QAAS;UAChB+C,QAAQ,EAAGC,CAAC,IAAK/C,WAAW,CAAC+C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7CK,WAAW,EAAC;QAAe;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,EAEDxC,YAAY,iBAAIX,OAAA;UAAK4C,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAElC;QAAY;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAEnEtC,OAAO,iBAAIb,OAAA;UAAK4C,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAEhEnD,OAAA;UAAQ4C,SAAS,EAAC,KAAK;UAACQ,OAAO,EAAEpC,eAAgB;UAAC6C,QAAQ,EAAEhD,OAAQ;UAAAgC,QAAA,EACjEhC,OAAO,GAAG,gBAAgB,GAAG;QAAM;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjD,EAAA,CAvIQD,KAAK;AAAA6D,EAAA,GAAL7D,KAAK;AAyId,eAAeA,KAAK;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}